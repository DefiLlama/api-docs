{
  "openapi": "3.0.3",
  "info": {
    "title": "DefiLlama Pro - OpenAPI 3.0",
    "version": "1.0.0",
    "description": "Docs for DefiLlama's Pro API"
  },
  "servers": [
    {
      "url": "https://pro-api.llama.fi"
    }
  ],
  "tags": [
    {
      "name": "TVL",
      "description": "Retrieve TVL data - pro"
    },
    {
      "name": "stablecoins",
      "description": "Data from our stablecoins dashboard - pro"
    },
    {
      "name": "active users",
      "description": "Data about active users on our chains and protocols dashboards"
    },
    {
      "name": "Unlocks",
      "description": "Data about token unlocks from our Unlocks dashboard"
    },
    {
      "name": "main page",
      "description": "Data from dashboards on our side menu"
    },
    {
      "name": "token liquidity",
      "description": "Provides the available liquidity for swapping from one token to another on a specific chain"
    },
    {
      "name": "yields",
      "description": "Data from our yields/APY dashboard"
    },
    {
      "name": "ETFs",
      "description": "Tradfi ETFs"
    },
    {
      "name": "meta",
      "description": "Get information about your API Key"
    },
    {
      "name": "narratives",
      "description": "Track performance of narratives"
    }
  ],
  "paths": {
    "/api/tokenProtocols/{symbol}": {
      "get": {
        "tags": ["TVL"],
        "x-pro-only": true,
        "summary": "Lists the amount of a certain token within all protocols. Data for the Token Usage page",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "token slug",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usdt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Portal"
                      },
                      "category": {
                        "type": "string",
                        "example": "Bridge"
                      },
                      "amountUsd": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        },
                        "example": {
                          "coingecko:tether-avalanche-bridged-usdt-e": 6485.2310529788765,
                          "coingecko:xcusdt": 45.514624238131,
                          "coingecko:layerzero-bridged-usdt-aptos": 7312.740629193999
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/inflows/{protocol}/{timestamp}": {
      "get": {
        "tags": ["TVL"],
        "x-pro-only": true,
        "summary": "Lists the amount of inflows and outflows for a protocol at a given date",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "description": "protocol slug",
            "required": true,
            "schema": {
              "type": "string",
              "example": "compound-v3"
            }
          },
          {
            "name": "timestamp",
            "in": "path",
            "description": "unix timestamp",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1700006400
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "outflows": {
                      "type": "number",
                      "example": -160563462.23474675
                    },
                    "oldTokens": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "number",
                          "example": 1700005031
                        },
                        "tvl": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number"
                          },
                          "example": {
                            "POLYGONUSDC": 2800590.050521,
                            "STMATIC": 5910852.971103674,
                            "USDC.E": 213182.234023,
                            "WETH": 138751.92261049704,
                            "WSTETH": 21205.858768287606,
                            "COMP": 899912.2484411557,
                            "ARB": 5191395.55706979,
                            "UNI": 3276947.8126982865,
                            "WBTC": 15237.12702489,
                            "WMATIC": 4316699.376111328,
                            "USDBC": 1567657.999816,
                            "GMX": 44027.42587184711,
                            "CBETH": 10011.824096757742,
                            "LINK": 2915041.329272804,
                            "USDC": 27302168.767972,
                            "MATICX": 5999572.681088426
                          }
                        }
                      }
                    },
                    "currentTokens": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "number",
                          "example": 1752771743
                        },
                        "tvl": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number"
                          },
                          "example": {
                            "SKY": 1839111.3665808514,
                            "WSUPEROETHB": 610.1258731272615,
                            "RETH": 335.9162918778323,
                            "WEETH": 21264.320107593303,
                            "STMATIC": 43248.612454883136,
                            "TETH": 7537.467077317422,
                            "USDT": 23936602.852221,
                            "USDC.E": 457484.93217,
                            "USDS": 986286.7461886762,
                            "FBTC": 7.88084468,
                            "WUSDM": 9912.583708525639,
                            "COMP": 199962.19982196926,
                            "UNI": 748399.6623864435,
                            "WRON": 48676.91287257022,
                            "WBTC": 8346.44481716,
                            "EZETH": 9378.908917279387,
                            "SDEUSD": 4476349.521512799,
                            "OSETH": 1751.011747340086,
                            "USDT0": 4807642.14842,
                            "LINK": 629790.4518594383,
                            "DEUSD": 14779291.40757071,
                            "MATICX": 239292.60540364735,
                            "ETHX": 7.643953648e-9,
                            "POLYGONUSDC": 1130561.097829,
                            "OP": 474055.27558234957,
                            "RSWETH": 0.7588296185577288,
                            "SFRAX": 32550977.989188965,
                            "METH": 1256.0286269578846,
                            "WETH": 106772.79955793211,
                            "WSTETH": 127030.77547884149,
                            "ARB": 8082828.497277849,
                            "RSETH": 13198.88264941232,
                            "WMATIC": 1192273.6401273129,
                            "GMX": 6408.6736121308695,
                            "USDBC": 200217.562935,
                            "CBETH": 2094.7317932368333,
                            "USDE": 1660443.2086449957,
                            "ETH": 657.5898609775202,
                            "SUSDS": 2360827.122683512,
                            "USDC": 67152880.13345899,
                            "TBTC": 297.109236856541,
                            "AXS": 156.95240126041227,
                            "CBBTC": 722.70428829,
                            "WRSETH": 208.78735872239974,
                            "AERO": 3582072.5610455093
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chainAssets": {
      "get": {
        "tags": ["TVL"],
        "summary": "Get assets of all chains",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "object",
                      "properties": {
                        "canonical": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "4482065428.82707789718257509123"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "AGLD": "8.25709",
                                "STPT": "263726.9847408758",
                                "APU": "43899.14483171882",
                                "CTX": "595333.6768847435",
                                "APW": "37727.892544515686"
                              }
                            }
                          }
                        },
                        "native": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "10848868127.0093572327157505031494340578574406321858"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "BENI": "1322294.3731837485",
                                "ANIME": "10.7583162713828217314035397949084",
                                "SACA": "114132.47631920826",
                                "HOKK": "4966.3804669563400723148947324498025",
                                "TOSHI": "91927630.6839119443580116994151258714"
                              }
                            }
                          }
                        },
                        "thirdParty": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "3182802062.49398527398560408906"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "BRZ": "1810685.01887618296911",
                                "BOBA": "0",
                                "BURN": "0",
                                "GGTK": "0.6545695",
                                "GYFI": "2618437.7978"
                              }
                            }
                          }
                        },
                        "total": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "string",
                              "example": "18513735618.330420403"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "example": {
                                "AGLD": "8.25709",
                                "STPT": "263726.9847408758",
                                "APU": "43899.14483171882",
                                "CTX": "595333.6768847435",
                                "APW": "37727.892544515686"
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "number",
                      "example": 1752843956
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/stablecoins/stablecoindominance/{chain}": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get stablecoin dominance per chain along with the info about the larges coin in a chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain slug, you can get these from /chains or the chains property on /protocols",
            "schema": {
              "type": "string",
              "example": "Ethereum"
            }
          },
          {
            "name": "stablecoin",
            "in": "query",
            "required": false,
            "description": "stablecoin ID, you can get these from /stablecoins",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": "1752796800"
                      },
                      "totalCirculatingUSD": {
                        "type": "object",
                        "properties": {
                          "peggedUSD": {
                            "type": "number",
                            "example": 129531632690.44954
                          },
                          "peggedVAR": {
                            "type": "number",
                            "example": 100466426.71408615
                          },
                          "peggedEUR": {
                            "type": "number",
                            "example": 286714265.91542196
                          }
                        }
                      },
                      "greatestMcap": {
                        "type": "object",
                        "properties": {
                          "gecko_id": {
                            "type": "string",
                            "example": "tether"
                          },
                          "symbol": {
                            "type": "string",
                            "example": "USDT"
                          },
                          "mcap": {
                            "type": "number",
                            "example": 65836754910.17763
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/activeUsers": {
      "get": {
        "tags": ["active users"],
        "summary": "Get active users on our chains and protocols pages",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Compound V2"
                      },
                      "users": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "example": 72
                          },
                          "end": {
                            "type": "number",
                            "example": 1752832840
                          }
                        }
                      },
                      "txs": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "example": "103"
                          },
                          "end": {
                            "type": "number",
                            "example": 1752832840
                          }
                        }
                      },
                      "gasUsd": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number",
                            "example": 331.61595785000003
                          },
                          "end": {
                            "type": "number",
                            "example": 1752832840
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "114": {
                      "name": "Compound V2",
                      "users": {
                        "value": 72,
                        "end": 1752832840
                      },
                      "txs": {
                        "value": "103",
                        "end": 1752832840
                      },
                      "gasUsd": {
                        "value": 331.61595785000003,
                        "end": 1752832840
                      }
                    },
                    "121": {
                      "name": "CREAM Lending",
                      "users": {
                        "value": 7,
                        "end": 1752832840
                      },
                      "txs": {
                        "value": "16",
                        "end": 1752832840
                      },
                      "gasUsd": {
                        "value": 36.184285131821,
                        "end": 1752832840
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/userData/{type}/{protocolId}": {
      "get": {
        "tags": ["active users"],
        "summary": "Get user data by type and protocol",
        "parameters": [
          {
            "name": "protocolId",
            "in": "path",
            "description": "protocol id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "protocol id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "activeUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/api/emissions": {
      "get": {
        "tags": ["Unlocks"],
        "summary": "List of all tokens along with basic info for each",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "coingecko:whitebit"
                      },
                      "sources": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["https://cdn.whitebit.com/wbt/whitepaper-en.pdf"]
                      },
                      "protocolId": {
                        "type": "string",
                        "example": "6143"
                      },
                      "name": {
                        "type": "string",
                        "example": "WhiteBIT"
                      },
                      "circSupply": {
                        "type": "number",
                        "example": 293500000
                      },
                      "circSupply30d": {
                        "type": "number",
                        "example": 293500000
                      },
                      "totalLocked": {
                        "type": "number",
                        "example": 81500000
                      },
                      "maxSupply": {
                        "type": "number",
                        "example": 375000000
                      },
                      "gecko_id": {
                        "type": "string",
                        "example": "whitebit"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "example": "A cliff of {tokens[0]} tokens was unlocked from Funds 1 on {timestamp}"
                            },
                            "timestamp": {
                              "type": "number",
                              "example": 1659657600
                            },
                            "noOfTokens": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "example": [120000000]
                            },
                            "category": {
                              "type": "string",
                              "example": "noncirculating"
                            },
                            "unlockType": {
                              "type": "string",
                              "example": "cliff"
                            }
                          }
                        }
                      },
                      "nextEvent": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "number",
                            "example": 1773360001
                          },
                          "toUnlock": {
                            "type": "number",
                            "example": 81500000
                          }
                        }
                      },
                      "unlocksPerDay": {
                        "type": "number",
                        "example": 0
                      },
                      "mcap": {
                        "type": "number",
                        "example": 6577845629.249915
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/emission/{protocol}": {
      "get": {
        "tags": ["Unlocks"],
        "summary": "Unlocks data for a given token/protocol. You can find a list of available slugs to query by querying /emissions and then extracting the key `gecko_id`",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "description": "protocol slug",
            "required": true,
            "schema": {
              "type": "string",
              "example": "hyperliquid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "object",
                      "properties": {
                        "documentedData": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "label": {
                                    "type": "string",
                                    "example": "Hyper Foundation Budget"
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "timestamp": {
                                          "type": "number",
                                          "example": 1732838400
                                        },
                                        "unlocked": {
                                          "type": "number",
                                          "example": 60000000
                                        },
                                        "rawEmission": {
                                          "type": "number",
                                          "example": 60000000
                                        },
                                        "burned": {
                                          "type": "number",
                                          "example": 0
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "tokenAllocation": {
                              "type": "object",
                              "properties": {
                                "current": {
                                  "type": "object",
                                  "properties": {
                                    "insiders": {
                                      "type": "number",
                                      "example": 16
                                    },
                                    "noncirculating": {
                                      "type": "number",
                                      "example": 0.8
                                    },
                                    "publicSale": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "airdrop": {
                                      "type": "number",
                                      "example": 82.5
                                    },
                                    "farming": {
                                      "type": "number",
                                      "example": 0.7
                                    }
                                  }
                                },
                                "final": {
                                  "type": "object",
                                  "properties": {
                                    "insiders": {
                                      "type": "number",
                                      "example": 45.8
                                    },
                                    "noncirculating": {
                                      "type": "number",
                                      "example": 0.5
                                    },
                                    "publicSale": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "airdrop": {
                                      "type": "number",
                                      "example": 47.7
                                    },
                                    "farming": {
                                      "type": "number",
                                      "example": 6
                                    }
                                  }
                                },
                                "progress": {
                                  "type": "object",
                                  "properties": {
                                    "insiders": {
                                      "type": "number",
                                      "example": 20.1
                                    },
                                    "noncirculating": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "publicSale": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "airdrop": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "farming": {
                                      "type": "number",
                                      "example": 6.5
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "notes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "The Community Rewards schedule has been linearly extrapolated using the rate of unlocks as of 4 March 2025.",
                                "The remaining allocation, not shown on the chart, belongs to Community Rewards. It has been excluded here to avoid obscuring the remaining data.",
                                "Most vesting schedules will complete between 2027–2028; some will continue after 2028. Here we have used an end date of end of 2027.",
                                "Although the full allocations for Hyper Foundation Budget and Community Grants were unlocked at TGE it is unclear what their spend rate is."
                              ]
                            },
                            "token": {
                              "type": "string",
                              "example": "coingecko:hyperliquid"
                            },
                            "sources": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["https://hyperfnd.medium.com/hype-genesis-1830a4dc2e3f"]
                            },
                            "protocolIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["4481", "5448", "5507", "5761"]
                            },
                            "total": {
                              "type": "number",
                              "example": 1000000000
                            },
                            "chain": {
                              "type": "string",
                              "example": "hyperliquid"
                            },
                            "name": {
                              "type": "string",
                              "example": "Hyperliquid"
                            },
                            "gecko_id": {
                              "type": "string",
                              "example": "hyperliquid"
                            },
                            "defillamaIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": ["4481"]
                            },
                            "categories": {
                              "type": "object",
                              "properties": {
                                "insiders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["Core Contributors", "Hyper Foundation Budget"]
                                },
                                "noncirculating": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["Community Grants"]
                                },
                                "publicSale": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["HIP-2"]
                                },
                                "airdrop": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["Genesis Distribution"]
                                },
                                "farming": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["Community Rewards"]
                                }
                              }
                            },
                            "protocolCategory": {
                              "type": "string",
                              "example": "Bridge"
                            },
                            "chainName": {
                              "type": "string",
                              "example": "Hyperliquid L1"
                            },
                            "pId": {
                              "type": "string",
                              "example": "4481"
                            }
                          }
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "example": "2025-07-18T13:30:56.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["main page"],
        "summary": "Overview of all categories accross all protocols",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "tvl": {
                              "type": "number",
                              "example": 45997965191.323425
                            },
                            "staking": {
                              "type": "number",
                              "example": 117946591.34734812
                            },
                            "pool2": {
                              "type": "number",
                              "example": 4467.975298299099
                            },
                            "doublecounted": {
                              "type": "number",
                              "example": 1259137973.0377812
                            },
                            "borrowed": {
                              "type": "number",
                              "example": 714082.8186222482
                            },
                            "offers": {
                              "type": "number",
                              "example": 0
                            },
                            "vesting": {
                              "type": "number",
                              "example": 0.0009596433739281769
                            },
                            "treasury": {
                              "type": "number",
                              "example": 11142.746348986766
                            },
                            "liquidstaking": {
                              "type": "number",
                              "example": 20838772668.74201
                            },
                            "dcAndLsOverlap": {
                              "type": "number",
                              "example": 24954437702.556156
                            }
                          }
                        }
                      },
                      "example": {
                        "1747440000": {
                          "Bridge": {
                            "tvl": 45997965191.323425,
                            "staking": 117946591.34734812,
                            "pool2": 4467.975298299099,
                            "doublecounted": 1259137973.0377812,
                            "borrowed": 714082.8186222482,
                            "offers": 0,
                            "vesting": 0.0009596433739281769
                          }
                        }
                      }
                    },
                    "categories": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Bridge": [
                          "WBTC",
                          "RenVM",
                          "The Tokenized Bitcoin",
                          "hBTC",
                          "Rhino.fi",
                          "Strudel Finance",
                          "Connext",
                          "Injective Bridge",
                          "pNetwork",
                          "Allbridge Classic",
                          "Multichain"
                        ],
                        "Risk Curators": [
                          "9Summits",
                          "Alphaping",
                          "Apostro",
                          "B.Protocol Curator",
                          "Block Analitica",
                          "Clearstar",
                          "Euler DAO",
                          "Fence Finance",
                          "Gauntlet",
                          "Hakutora",
                          "Hyperithm",
                          "K3 Capital",
                          "LlamaRisk",
                          "M11 Credit",
                          "MEV Capital",
                          "Ouroboros Capital",
                          "Re7 Labs",
                          "Relend Network",
                          "Steakhouse Financial",
                          "Tulipa Capital",
                          "Alterscope",
                          "Yearn Curating",
                          "CIAN Curating",
                          "Vault Bridge"
                        ],
                        "DAO Service Provider": ["CreateDAO"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/forks": {
      "get": {
        "tags": ["main page"],
        "x-pro-only": true,
        "summary": "Overview of all categories accross all protocols",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "staking": {
                              "type": "number",
                              "example": 712008453.6943725
                            },
                            "tvl": {
                              "type": "number",
                              "example": 2580053162.908216
                            },
                            "pool2": {
                              "type": "number",
                              "example": 146782.46894897142
                            },
                            "doublecounted": {
                              "type": "number",
                              "example": 3013724.782369083
                            },
                            "borrowed": {
                              "type": "number",
                              "example": 925950.5791909688
                            },
                            "vesting": {
                              "type": "number",
                              "example": 0.0033932788318303733
                            },
                            "liquidstaking": {
                              "type": "number",
                              "example": 1184348.1365500058
                            },
                            "dcAndLsOverlap": {
                              "type": "number",
                              "example": 1184348.1365500058
                            }
                          }
                        }
                      },
                      "example": {
                        "1752624000": {
                          "Uniswap V2": {
                            "staking": 712008453.6943725,
                            "tvl": 2580053162.908216,
                            "pool2": 146782.46894897142,
                            "doublecounted": 3013724.782369083,
                            "borrowed": 925950.5791909688,
                            "vesting": 0.0033932788318303733
                          }
                        }
                      }
                    },
                    "forks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Uniswap V2": [
                          "SushiSwap",
                          "Varen",
                          "PancakeSwap AMM",
                          "Defi Swap",
                          "Energiswap",
                          "Pangolin",
                          "Cometh",
                          "Honeyswap",
                          "0.exchange",
                          "YetiSwap",
                          "Swapr V2",
                          "Lydia",
                          "Levinswap",
                          "SpookySwap V2",
                          "Quickswap Dex",
                          "SpiritSwap AMM",
                          "ViperSwap",
                          "HyperJump",
                          "Dfyn Network",
                          "Unicly"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/oracles": {
      "get": {
        "tags": ["main page"],
        "summary": "Overview of all categories accross all protocols",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "tvl": {
                              "type": "number",
                              "example": 48896114862.57202
                            },
                            "staking": {
                              "type": "number",
                              "example": 1564643922.8114228
                            },
                            "pool2": {
                              "type": "number",
                              "example": 107245076.47312777
                            },
                            "borrowed": {
                              "type": "number",
                              "example": 25132031822.258495
                            },
                            "treasury": {
                              "type": "number",
                              "example": 52.078623852211784
                            },
                            "vesting": {
                              "type": "number",
                              "example": 3347.9893057455306
                            }
                          }
                        }
                      },
                      "example": {
                        "1752624000": {
                          "Chainlink": {
                            "tvl": 48896114862.57202,
                            "staking": 1564643922.8114228,
                            "pool2": 107245076.47312777,
                            "borrowed": 25132031822.258495,
                            "treasury": 52.078623852211784,
                            "vesting": 3347.9893057455306
                          }
                        }
                      }
                    },
                    "oracles": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Chainlink": ["AAVE V2", "Compound V2", "Synthetix v1+v2", "CREAM Lending"]
                      }
                    },
                    "chainsByOracle": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "Chainlink": [
                          "Ethereum",
                          "Arbitrum",
                          "BSC",
                          "Avalanche",
                          "Base",
                          "Solana",
                          "Polygon",
                          "OP Mainnet",
                          "Linea"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/hacks": {
      "get": {
        "tags": ["main page"],
        "summary": "Overview of all hacks on our Hacks dashboard",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "example": 1711065600
                      },
                      "name": {
                        "type": "string",
                        "example": "Super Sushi Samurai"
                      },
                      "classification": {
                        "type": "string",
                        "example": "Protocol Logic"
                      },
                      "technique": {
                        "type": "string",
                        "example": "Infinite Mint and Dump"
                      },
                      "amount": {
                        "type": "number",
                        "example": 4800000
                      },
                      "chain": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Blast"]
                      },
                      "bridgeHack": {
                        "type": "boolean",
                        "example": false
                      },
                      "targetType": {
                        "type": "string",
                        "example": "Gaming"
                      },
                      "source": {
                        "type": "string",
                        "example": "https://rekt.news/sss-rekt/"
                      },
                      "returnedFunds": {
                        "type": ["number", "null"],
                        "example": null
                      },
                      "defillamaId": {
                        "type": ["number", "null"],
                        "example": null
                      },
                      "language": {
                        "type": ["string", "null"],
                        "example": "Solidity"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/raises": {
      "get": {
        "tags": ["main page"],
        "summary": "Overview of all raises on our Raises dashboard",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "raises": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "number",
                            "example": 1740528000
                          },
                          "name": {
                            "type": "string",
                            "example": "Ethena Labs"
                          },
                          "round": {
                            "type": "string",
                            "example": "Strategic"
                          },
                          "amount": {
                            "type": "number",
                            "example": 16
                          },
                          "chains": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Ethereum"]
                          },
                          "sector": {
                            "type": "string",
                            "example": "Ethena is a synthetic dollar protocol built on Ethereum"
                          },
                          "category": {
                            "type": "string",
                            "example": "DeFi"
                          },
                          "categoryGroup": {
                            "type": "string",
                            "example": "DeFi & CeFi"
                          },
                          "source": {
                            "type": "string",
                            "example": "https://www.benzinga.com/pressreleases/25/02/g43966782/mexc-invests-20-million-in-usde-to-drive-stablecoin-adoption-launches-1-000-000-reward-event"
                          },
                          "leadInvestors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["MEXC Ventures"]
                          },
                          "otherInvestors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": []
                          },
                          "valuation": {
                            "type": ["number", "null"],
                            "example": null
                          },
                          "defillamaId": {
                            "type": "string",
                            "example": "parent#ethena"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/treasuries": {
      "get": {
        "tags": ["main page"],
        "summary": "List all protocols on our Treasuries dashboard",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "6355-treasury"
                      },
                      "name": {
                        "type": "string",
                        "example": "SharpLink Gaming (treasury)"
                      },
                      "address": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "symbol": {
                        "type": "string",
                        "example": "-"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://www.sharplink.com/"
                      },
                      "description": {
                        "type": "string",
                        "example": "SharpLink is one of the first Nasdaq-listed companies to develop a treasury strategy centered on ETH"
                      },
                      "chain": {
                        "type": "string",
                        "example": "Ethereum"
                      },
                      "logo": {
                        "type": "string",
                        "example": "https://icons.llama.fi/sharplink-gaming.jpg"
                      },
                      "audits": {
                        "type": "string",
                        "example": "0"
                      },
                      "audit_note": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "gecko_id": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "cmcId": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "category": {
                        "type": "string",
                        "example": "Treasury Manager"
                      },
                      "chains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Ethereum"]
                      },
                      "module": {
                        "type": "string",
                        "example": "treasury/sharplink-gaming.js"
                      },
                      "treasury": {
                        "type": "string",
                        "example": "sharplink-gaming.js"
                      },
                      "forkedFromIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": []
                      },
                      "twitter": {
                        "type": "string",
                        "example": "SharpLinkGaming"
                      },
                      "slug": {
                        "type": "string",
                        "example": "sharplink-gaming-(treasury)"
                      },
                      "tvl": {
                        "type": "number",
                        "example": 976150507.157045
                      },
                      "chainTvls": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        },
                        "example": {
                          "Ethereum": 976150507.157045
                        }
                      },
                      "change_1h": {
                        "type": "number",
                        "example": -1.1231970563777622
                      },
                      "change_1d": {
                        "type": "number",
                        "example": 15.845546813803097
                      },
                      "change_7d": {
                        "type": "number",
                        "example": 75.57040101595928
                      },
                      "tokenBreakdowns": {
                        "type": "object",
                        "properties": {
                          "ownTokens": {
                            "type": "number",
                            "example": 0
                          },
                          "stablecoins": {
                            "type": "number",
                            "example": 0.003
                          },
                          "majors": {
                            "type": "number",
                            "example": 67481592.5634468
                          },
                          "others": {
                            "type": "number",
                            "example": 908668914.5905982
                          }
                        }
                      },
                      "mcap": {
                        "type": ["number", "null"],
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/entities": {
      "get": {
        "tags": ["main page"],
        "summary": "List all entities",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "entity-8"
                      },
                      "name": {
                        "type": "string",
                        "example": "Blockchain Capital"
                      },
                      "url": {
                        "type": "string",
                        "example": "https://blockchain.capital"
                      },
                      "description": {
                        "type": "string",
                        "example": "Blockchain Capital is a leading venture firm in the blockchain industry. In the last 9 years we have made over 160 investments in companies and protocols in the sector, across different stages, geographies and asset types."
                      },
                      "logo": {
                        "type": "string",
                        "example": "https://icons.llama.fi/blockchain-capital.jpg"
                      },
                      "category": {
                        "type": "string",
                        "example": "VC"
                      },
                      "module": {
                        "type": "string",
                        "example": "entities/blockchain-capital.js"
                      },
                      "twitter": {
                        "type": "string",
                        "example": "blockchaincap"
                      },
                      "symbol": {
                        "type": "string",
                        "example": ""
                      },
                      "chain": {
                        "type": "string",
                        "example": "Ethereum"
                      },
                      "gecko_id": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "cmcId": {
                        "type": ["string", "null"],
                        "example": null
                      },
                      "chains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Ethereum"]
                      },
                      "slug": {
                        "type": "string",
                        "example": "blockchain-capital"
                      },
                      "tvl": {
                        "type": "number",
                        "example": 131402986.1539898
                      },
                      "chainTvls": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        },
                        "example": {
                          "Ethereum": 131402986.1539898
                        }
                      },
                      "change_1h": {
                        "type": "number",
                        "example": 0.5368786705972184
                      },
                      "change_1d": {
                        "type": "number",
                        "example": 5.632604890674784
                      },
                      "change_7d": {
                        "type": "number",
                        "example": 11.27548502629729
                      },
                      "tokenBreakdowns": {
                        "type": "object",
                        "properties": {
                          "ownTokens": {
                            "type": "number",
                            "example": 0
                          },
                          "stablecoins": {
                            "type": "number",
                            "example": 0.06493662312
                          },
                          "majors": {
                            "type": "number",
                            "example": 29628575.4114822
                          },
                          "others": {
                            "type": "number",
                            "example": 101774410.67757098
                          }
                        }
                      },
                      "mcap": {
                        "type": ["number", "null"],
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-pro-only": true
      }
    },
    "/api/historicalLiquidity/{token}": {
      "get": {
        "tags": ["token liquidity"],
        "summary": "Provides the name of contracts on a determined chain",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token slug",
            "required": true,
            "schema": {
              "type": "string",
              "example": "usdt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/yields/pools": {
      "get": {
        "tags": ["yields"],
        "summary": "Retrieve the latest data for all pools, including enriched information such as predictions",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/yields/poolsOld": {
      "get": {
        "tags": ["yields"],
        "summary": "Same as /pools but it also includes a new parameter `pool_old` which usually contains pool address (but not guaranteed)",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/yields/chart/{pool}": {
      "get": {
        "tags": ["yields"],
        "summary": "Get historical APY and TVL of a pool",
        "parameters": [
          {
            "name": "pool",
            "in": "path",
            "required": true,
            "description": "pool id, can be retrieved from /pools (property is called pool)",
            "schema": {
              "type": "string",
              "example": "747c1d2a-c668-4682-b9f9-296708a3dd90"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/yields/poolsBorrow": {
      "get": {
        "tags": ["yields"],
        "summary": "Borrow costs APY of assets from lending markets",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/yields/chartLendBorrow/{pool}": {
      "get": {
        "tags": ["yields"],
        "summary": "Historical borrow cost APY from a pool on a lending market, pool ids should be obtained from /poolsBorrow",
        "parameters": [
          {
            "name": "pool",
            "in": "path",
            "required": true,
            "description": "pool id, can be retrieved from /poolsBorrow (property is called pool)",
            "schema": {
              "type": "string",
              "example": "71418c17-d2aa-4eff-b68a-806fff9ec951"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/yields/perps": {
      "get": {
        "tags": ["yields"],
        "summary": "Funding rates and Open Interest of perps across exchanges, including both Decentralized and Centralized",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/yields/lsdRates": {
      "get": {
        "tags": ["yields"],
        "summary": "APY rates of multiple LSDs",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/etfs/overview": {
      "get": {
        "tags": ["ETFs"],
        "summary": "Get BTC ETFs and their metrics (aum, price, fees...)",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/etfs/overviewEth": {
      "get": {
        "tags": ["ETFs"],
        "summary": "Get ETH ETFs",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/etfs/history": {
      "get": {
        "tags": ["ETFs"],
        "summary": "Historical AUM of all BTC ETFs",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/etfs/historyEth": {
      "get": {
        "tags": ["ETFs"],
        "summary": "Historical AUM of all BTC ETFs",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/fdv/performance/{period}": {
      "get": {
        "tags": ["narratives"],
        "summary": "Get chart of narratives based on category performance (with individual coins weighted by mcap)",
        "parameters": [
          {
            "name": "period",
            "in": "path",
            "required": true,
            "description": "One of ['7', '30', 'ytd', '365']",
            "schema": {
              "type": "string",
              "example": "30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/api/overview/derivatives": {
      "get": {
        "tags": ["perps"],
        "summary": "Lists all derivatives along summaries of their volumes filtering by chain",
        "parameters": [
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/api/summary/derivatives/{protocol}": {
      "get": {
        "tags": ["perps"],
        "summary": "Volume Details about a specific perp protocol",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "hyperliquid"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/overview/fees": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "List all protocols along with summaries of their fees and revenue and dataType history data",
        "servers": [
          {
            "url": "https://api.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue", "dailyHoldersRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/overview/fees/{chain}": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "List all protocols along with summaries of their fees and revenue and dataType history data by chain",
        "servers": [
          {
            "url": "https://api.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain name, list of all supported chains can be found under allChains attribute in /overview/fees response",
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue", "dailyHoldersRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/summary/fees/{protocol}": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "Get summary of protocol fees and revenue with historical data",
        "servers": [
          {
            "url": "https://api.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "lyra"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue", "dailyHoldersRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/bridges": {
      "get": {
        "tags": ["bridges"],
        "summary": "List all bridges along with summaries of recent bridge volumes.",
        "servers": [
          {
            "url": "https://bridges.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "includeChains",
            "in": "query",
            "required": false,
            "description": "set whether to include current previous day volume breakdown by chain",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/bridge/{id}": {
      "get": {
        "tags": ["bridges"],
        "summary": "Get summary of bridge volume and volume breakdown by chain",
        "servers": [
          {
            "url": "https://bridges.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "bridge ID, you can get these from /bridges",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/bridgevolume/{chain}": {
      "get": {
        "tags": ["bridges"],
        "summary": "Get historical volumes for a bridge, chain, or bridge on a particular chain",
        "servers": [
          {
            "url": "https://bridges.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain slug, you can get these from /chains. Call also use 'all' for volume on all chains.",
            "schema": {
              "type": "string",
              "example": "Ethereum"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "bridge ID, you can get these from /bridges",
            "schema": {
              "type": "integer",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/bridgedaystats/{timestamp}/{chain}": {
      "get": {
        "tags": ["bridges"],
        "summary": "Get a 24hr token and address volume breakdown for a bridge",
        "servers": [
          {
            "url": "https://bridges.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "timestamp",
            "in": "path",
            "required": true,
            "description": "Unix timestamp. Data returned will be for the 24hr period starting at 00:00 UTC that the timestamp lands in.",
            "schema": {
              "type": "integer",
              "example": 1667304000
            }
          },
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain slug, you can get these from /chains.",
            "schema": {
              "type": "string",
              "example": "Ethereum"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "bridge ID, you can get these from /bridges",
            "schema": {
              "type": "integer",
              "example": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": ["bridges"],
        "summary": "Get all transactions for a bridge within a date range",
        "servers": [
          {
            "url": "https://bridges.llama.fi"
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "bridge ID, you can get these from /bridges",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "starttimestamp",
            "in": "query",
            "required": false,
            "description": "start timestamp (Unix Timestamp) for date range",
            "schema": {
              "type": "integer",
              "example": 1667260800
            }
          },
          {
            "name": "endtimestamp",
            "in": "query",
            "required": false,
            "description": "end timestamp (Unix timestamp) for date range",
            "schema": {
              "type": "integer",
              "example": 1667347200
            }
          },
          {
            "name": "sourcechain",
            "in": "query",
            "required": false,
            "description": "Returns only transactions that are bridging from the specified source chain.",
            "schema": {
              "type": "string",
              "example": "Polygon"
            }
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "description": "Returns only transactions with specified address as \"from\" or \"to\". Addresses are quried in the form {chain}:{address}, where chain is an identifier such as ethereum, bsc, polygon, avax... .",
            "schema": {
              "type": "string",
              "example": "ethereum:0x69b4B4390Bd1f0aE84E090Fe8af7AbAd2d95Cc8E"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "limit to number of transactions returned, maximum is 6000",
            "schema": {
              "type": "integer",
              "example": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-pro-only": true
      }
    },
    "/usage/APIKEY": {
      "get": {
        "tags": ["meta"],
        "summary": "Get amount of credits left in the api key, these reset on the 1st of each month",
        "servers": [
          {
            "url": "https://pro-api.llama.fi"
          }
        ],
        "responses": {
          "200": {
            "description": "credits left"
          }
        },
        "x-pro-only": true
      }
    },
    "/api/protocols": {
      "get": {
        "tags": ["TVL"],
        "summary": "List all protocols on defillama along with their tvl",
        "responses": {
          "200": {
            "description": "Array of all protocols with their TVL data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "2269"
                      },
                      "name": {
                        "type": "string",
                        "example": "Aave"
                      },
                      "symbol": {
                        "type": "string",
                        "example": "AAVE"
                      },
                      "category": {
                        "type": "string",
                        "example": "Lending"
                      },
                      "chains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Ethereum", "Polygon"]
                      },
                      "tvl": {
                        "type": "number",
                        "example": 5200000000
                      },
                      "chainTvls": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        },
                        "example": {
                          "Ethereum": 3200000000,
                          "Polygon": 2000000000
                        }
                      },
                      "change_1d": {
                        "type": "number",
                        "example": 2.1
                      },
                      "change_7d": {
                        "type": "number",
                        "example": -5.3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/protocol/{protocol}": {
      "get": {
        "tags": ["TVL"],
        "summary": "Get historical TVL of a protocol and breakdowns by token and chain",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "description": "protocol slug",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aave"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Protocol details with historical TVL data and chain breakdowns",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "parent#aave"
                    },
                    "name": {
                      "type": "string",
                      "example": "AAVE"
                    },
                    "symbol": {
                      "type": "string",
                      "example": "AAVE"
                    },
                    "category": {
                      "type": "string",
                      "example": "Lending"
                    },
                    "chains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Ethereum", "Polygon", "Avalanche"]
                    },
                    "currentChainTvls": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      },
                      "example": {
                        "Ethereum": 3200000000,
                        "Polygon": 1500000000
                      }
                    },
                    "chainTvls": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "tvl": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "number",
                                  "example": 1609459200
                                },
                                "totalLiquidityUSD": {
                                  "type": "number",
                                  "example": 1000000
                                }
                              }
                            }
                          },
                          "tokens": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "number",
                                  "example": 1609459200
                                },
                                "tokens": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "number"
                                  },
                                  "example": {
                                    "USDC": 1000000,
                                    "USDT": 800000
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Protocol not found"
          }
        }
      }
    },
    "/api/v2/historicalChainTvl": {
      "get": {
        "tags": ["TVL"],
        "summary": "Get historical TVL (excludes liquid staking and double counted tvl) of DeFi on all chains",
        "responses": {
          "200": {
            "description": "Historical TVL data for all chains combined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "description": "Unix timestamp",
                        "example": 1609459200
                      },
                      "tvl": {
                        "type": "number",
                        "description": "Total Value Locked in USD across all chains",
                        "example": 15000000000
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/historicalChainTvl/{chain}": {
      "get": {
        "tags": ["TVL"],
        "summary": "Get historical TVL (excludes liquid staking and double counted tvl) of a chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain slug, you can get these from /chains or the chains property on /protocols",
            "schema": {
              "type": "string",
              "example": "Ethereum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical TVL data for the specified chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "description": "Unix timestamp",
                        "example": 1609459200
                      },
                      "tvl": {
                        "type": "number",
                        "description": "Total Value Locked in USD for this chain",
                        "example": 45000000000
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chain not found"
          }
        }
      }
    },
    "/api/tvl/{protocol}": {
      "get": {
        "tags": ["TVL"],
        "summary": "Simplified endpoint to get current TVL of a protocol",
        "description": "Simplified endpoint that only returns a number, the current TVL of a protocol",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "uniswap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current TVL of the protocol in USD",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "description": "Total Value Locked in USD",
                  "example": 4962012809.795062
                }
              }
            }
          },
          "404": {
            "description": "Protocol not found"
          }
        }
      }
    },
    "/api/v2/chains": {
      "get": {
        "tags": ["TVL"],
        "summary": "Get current TVL of all chains",
        "responses": {
          "200": {
            "description": "Array of all chains with their TVL data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gecko_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "CoinGecko ID for the chain's native token",
                        "example": "ethereum"
                      },
                      "tvl": {
                        "type": "number",
                        "description": "Total Value Locked in USD",
                        "example": 65998652431.40251
                      },
                      "tokenSymbol": {
                        "type": "string",
                        "nullable": true,
                        "description": "Native token symbol",
                        "example": "ETH"
                      },
                      "cmcId": {
                        "type": "string",
                        "nullable": true,
                        "description": "CoinMarketCap ID",
                        "example": "1027"
                      },
                      "name": {
                        "type": "string",
                        "description": "Chain name",
                        "example": "Ethereum"
                      },
                      "chainId": {
                        "type": "number",
                        "nullable": true,
                        "description": "Chain ID number",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/prices/current/{coins}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get current prices of tokens by contract address",
        "description": "The goal of this API is to price as many tokens as possible, including exotic ones that never get traded, which makes them impossible to price by looking at markets.\n\nThe base of our data are prices pulled from coingecko, which is then extended through multiple means:\n- We price all bridged tokens by using the price of the token in it's original chain, so we fetch all bridged versions of USDC on arbitrum, fantom, avax... and price all them using the price for the token on Ethereum, which we know. Right now we support 10 different bridging protocols.\n- We have multiple adapters to price specialized sets of tokens by running custom code:\n  - We price yearn's yToken LPs by checking how much underlying token can be withdrawn for each LP\n  - Aave, compound and euler LP tokens are also priced based on their relationship against underlying tokens\n  - Uniswap, curve, balancer and stargate LPs are priced using the underlying tokens in each pair\n  - GMX's GLP token is priced based on the value of tokens given on withdrawal (which includes calculations based on trader's PnL)\n  \n  - Synthetix tokens are priced using forex prices of the coin they are pegged to\n- For tokens that we haven't been able to price in any other way, we find the pool with most liquidity for each on uniswap, curve and serum and then use the prices provided on those exchanges.\n  \n  Unlike all the other tokens, we can't confirm that these prices are correct, so we only ingest the ones that have sufficient liquidity and, even in that case, we attach a `confidence` value to them that is related to the depth of liquidity and which represents our confidence in the quality of each price. API consumers can choose to filter out prices with low confidence values.\n  \n Our API server is fully open source and we are constantly adding more pricing adapters, extending the amount of tokens we support.\n  \nTokens are queried using {chain}:{address}, where chain is an identifier such as ethereum, bsc, polygon, avax... You can also get tokens by coingecko id by setting `coingecko` as the chain, eg: coingecko:ethereum, coingecko:bitcoin. Examples:\n  - ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\n  - bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878\n  - coingecko:ethereum\n  - arbitrum:0x4277f8f2c384827b5273592ff7cebd9f2c1ac258\n",
        "parameters": [
          {
            "name": "coins",
            "in": "path",
            "required": true,
            "description": "set of comma-separated tokens defined as {chain}:{address}",
            "schema": {
              "type": "string",
              "example": "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8"
            }
          },
          {
            "name": "searchWidth",
            "in": "query",
            "required": false,
            "description": "time range on either side to find price data, defaults to 6 hours",
            "schema": {
              "type": "string",
              "example": "4h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1": {
                          "type": "object",
                          "properties": {
                            "decimals": {
                              "type": "number",
                              "example": 8
                            },
                            "price": {
                              "type": "number",
                              "example": 0.022053735051098835
                            },
                            "symbol": {
                              "type": "string",
                              "example": "cDAI"
                            },
                            "timestamp": {
                              "type": "number",
                              "example": 0.99
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/prices/historical/{timestamp}/{coins}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get historical prices of tokens by contract address",
        "description": "See /prices/current for explanation on how prices are sourced.",
        "parameters": [
          {
            "name": "coins",
            "in": "path",
            "required": true,
            "description": "set of comma-separated tokens defined as {chain}:{address}",
            "schema": {
              "type": "string",
              "example": "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8"
            }
          },
          {
            "name": "timestamp",
            "in": "path",
            "required": true,
            "description": "UNIX timestamp of time when you want historical prices",
            "schema": {
              "type": "number",
              "example": 1648680149
            }
          },
          {
            "name": "searchWidth",
            "in": "query",
            "required": false,
            "description": "time range on either side to find price data, defaults to 6 hours",
            "schema": {
              "type": "string",
              "example": "4h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1": {
                          "type": "object",
                          "properties": {
                            "decimals": {
                              "type": "number",
                              "example": 8
                            },
                            "price": {
                              "type": "number",
                              "example": 0.022053735051098835
                            },
                            "symbol": {
                              "type": "string",
                              "example": "cDAI"
                            },
                            "timestamp": {
                              "type": "number",
                              "example": 1648680149
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/batchHistorical": {
      "get": {
        "tags": ["coins"],
        "summary": "Get historical prices for multiple tokens at multiple different timestamps",
        "description": "Strings accepted by period and searchWidth:\nCan use regular chart candle notion like '4h' etc where:\nW = week, D = day, H = hour, M = minute (not case sensitive)\n",
        "parameters": [
          {
            "name": "coins",
            "in": "query",
            "required": true,
            "description": "object where keys are coins in the form {chain}:{address}, and values are arrays of requested timestamps",
            "schema": {
              "type": "string",
              "example": "{\"avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e\": [1666876743, 1666862343], \"coingecko:ethereum\": [1666869543, 1666862343]}\n"
            }
          },
          {
            "name": "searchWidth",
            "in": "query",
            "required": false,
            "description": "time range on either side to find price data, defaults to 6 hours",
            "schema": {
              "type": "string",
              "example": 600
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e": {
                          "type": "object",
                          "properties": {
                            "symbol": {
                              "type": "string",
                              "example": "USDC"
                            },
                            "prices": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "timestamp": {
                                    "type": "number",
                                    "example": 1666876674
                                  },
                                  "price": {
                                    "type": "number",
                                    "example": 0.999436
                                  },
                                  "confidence": {
                                    "type": "number",
                                    "example": 0.99
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/chart/{coins}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get token prices at regular time intervals",
        "description": "Strings accepted by period and searchWidth:\nCan use regular chart candle notion like '4h' etc where:\nW = week, D = day, H = hour, M = minute (not case sensitive)\n",
        "parameters": [
          {
            "name": "coins",
            "in": "path",
            "required": true,
            "description": "set of comma-separated tokens defined as {chain}:{address}",
            "schema": {
              "type": "string",
              "example": "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "unix timestamp of earliest data point requested",
            "schema": {
              "type": "number",
              "example": 1664364537
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "unix timestamp of latest data point requested",
            "schema": {
              "type": "number",
              "example": null
            }
          },
          {
            "name": "span",
            "in": "query",
            "required": false,
            "description": "number of data points returned, defaults to 0",
            "schema": {
              "type": "number",
              "example": 10
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "duration between data points, defaults to 24 hours",
            "schema": {
              "type": "string",
              "example": "2d"
            }
          },
          {
            "name": "searchWidth",
            "in": "query",
            "required": false,
            "description": "time range on either side to find price data, defaults to 10% of period",
            "schema": {
              "type": "string",
              "example": 600
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1": {
                          "type": "object",
                          "properties": {
                            "decimals": {
                              "type": "number",
                              "example": 8
                            },
                            "confidence": {
                              "type": "number",
                              "example": 0.99
                            },
                            "prices": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "timestamp": {
                                    "type": "number",
                                    "example": 1666790570
                                  },
                                  "price": {
                                    "type": "number",
                                    "example": 0.984519
                                  }
                                }
                              }
                            },
                            "symbol": {
                              "type": "string",
                              "example": "HUSD"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/percentage/{coins}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get percentage change in price over time",
        "description": "Strings accepted by period:\nCan use regular chart candle notion like '4h' etc where:\nW = week, D = day, H = hour, M = minute (not case sensitive)\n",
        "parameters": [
          {
            "name": "coins",
            "in": "path",
            "required": true,
            "description": "set of comma-separated tokens defined as {chain}:{address}",
            "schema": {
              "type": "string",
              "example": "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "description": "timestamp of data point requested, defaults to time now",
            "schema": {
              "type": "number",
              "example": 1664364537
            }
          },
          {
            "name": "lookForward",
            "in": "query",
            "required": false,
            "description": "whether you want the duration after your given timestamp or not, defaults to false (looking back)",
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "duration between data points, defaults to 24 hours",
            "schema": {
              "type": "string",
              "example": "3w"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1": {
                          "type": "number",
                          "example": -2.3009954568977147
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/prices/first/{coins}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get earliest timestamp price record for coins",
        "parameters": [
          {
            "name": "coins",
            "in": "path",
            "required": true,
            "description": "set of comma-separated tokens defined as {chain}:{address}",
            "schema": {
              "type": "string",
              "example": "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "coins": {
                      "type": "object",
                      "properties": {
                        "ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number",
                              "example": 0.9992047673109988
                            },
                            "symbol": {
                              "type": "string",
                              "example": "HUSD"
                            },
                            "timestamp": {
                              "type": "number",
                              "example": 1568883821
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Internal error"
          }
        }
      }
    },
    "/coins/block/{chain}/{timestamp}": {
      "get": {
        "tags": ["coins"],
        "summary": "Get the closest block to a timestamp",
        "description": "Runs binary search over a blockchain's blocks to get the closest one to a timestamp.\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.\n",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Chain which you want to get the block from",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "path",
            "description": "UNIX timestamp of the block you are searching for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "height": {
                      "type": "integer",
                      "format": "uint",
                      "example": 11150916
                    },
                    "timestamp": {
                      "type": "integer",
                      "format": "uint",
                      "example": 1603964988
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid chain or timestamp provided"
          }
        }
      }
    },
    "/stablecoins/stablecoins": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "List all stablecoins along with their circulating amounts",
        "parameters": [
          {
            "name": "includePrices",
            "in": "query",
            "required": false,
            "description": "set whether to include current stablecoin prices",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of all stablecoins with their circulation data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "peggedAssets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "name": {
                            "type": "string",
                            "example": "Tether"
                          },
                          "symbol": {
                            "type": "string",
                            "example": "USDT"
                          },
                          "pegType": {
                            "type": "string",
                            "example": "peggedUSD"
                          },
                          "pegMechanism": {
                            "type": "string",
                            "example": "fiat-backed"
                          },
                          "circulating": {
                            "type": "object",
                            "properties": {
                              "peggedUSD": {
                                "type": "number",
                                "example": 159510682147.76874
                              }
                            }
                          },
                          "chains": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Ethereum", "Tron", "BSC"]
                          },
                          "chainCirculating": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "current": {
                                  "type": "object",
                                  "properties": {
                                    "peggedUSD": {
                                      "type": "number",
                                      "example": 50000000000
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "price": {
                            "type": "number",
                            "example": 1.001
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stablecoins/stablecoincharts/all": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get historical mcap sum of all stablecoins",
        "parameters": [
          {
            "name": "stablecoin",
            "in": "query",
            "required": false,
            "description": "stablecoin ID, you can get these from /stablecoins",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical market cap data for all stablecoins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "example": 1609459200
                      },
                      "totalCirculating": {
                        "type": "object",
                        "properties": {
                          "peggedUSD": {
                            "type": "number",
                            "example": 45000000000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stablecoins/stablecoincharts/{chain}": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get historical mcap sum of all stablecoins in a chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain slug, you can get these from /chains or the chains property on /protocols",
            "schema": {
              "type": "string",
              "example": "Ethereum"
            }
          },
          {
            "name": "stablecoin",
            "in": "query",
            "required": false,
            "description": "stablecoin ID, you can get these from /stablecoins",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical market cap data for stablecoins on specified chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "example": 1609459200
                      },
                      "totalCirculating": {
                        "type": "object",
                        "properties": {
                          "peggedUSD": {
                            "type": "number",
                            "example": 12000000000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stablecoins/stablecoin/{asset}": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get historical mcap and historical chain distribution of a stablecoin",
        "parameters": [
          {
            "name": "asset",
            "in": "path",
            "required": true,
            "description": "stablecoin ID, you can get these from /stablecoins",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical market cap and chain distribution for specific stablecoin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Tether"
                    },
                    "symbol": {
                      "type": "string",
                      "example": "USDT"
                    },
                    "totalCirculating": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "number",
                            "example": 1609459200
                          },
                          "totalCirculating": {
                            "type": "number",
                            "example": 50000000000
                          }
                        }
                      }
                    },
                    "chainCirculating": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "number",
                              "example": 1609459200
                            },
                            "circulating": {
                              "type": "number",
                              "example": 20000000000
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stablecoins/stablecoinchains": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get current mcap sum of all stablecoins on each chain",
        "responses": {
          "200": {
            "description": "Current market cap of stablecoins by chain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Ethereum"
                      },
                      "totalCirculating": {
                        "type": "object",
                        "properties": {
                          "peggedUSD": {
                            "type": "number",
                            "example": 75000000000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stablecoins/stablecoinprices": {
      "get": {
        "tags": ["stablecoins"],
        "summary": "Get historical prices of all stablecoins",
        "responses": {
          "200": {
            "description": "Historical prices for all stablecoins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "number",
                        "example": 1609459200
                      },
                      "prices": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "number"
                        },
                        "example": {
                          "USDT": 1.001,
                          "USDC": 0.999,
                          "DAI": 1.002
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/dexs": {
      "get": {
        "tags": ["volumes"],
        "summary": "List all dexs along with summaries of their volumes and dataType history data",
        "parameters": [
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Overview of all DEXs with volume data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "protocols": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Uniswap"
                          },
                          "displayName": {
                            "type": "string",
                            "example": "Uniswap V3"
                          },
                          "total24h": {
                            "type": "number",
                            "example": 1500000000
                          },
                          "total7d": {
                            "type": "number",
                            "example": 10000000000
                          },
                          "change_1d": {
                            "type": "number",
                            "example": 5.2
                          },
                          "change_7d": {
                            "type": "number",
                            "example": -2.1
                          },
                          "chains": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Ethereum", "Polygon"]
                          }
                        }
                      }
                    },
                    "totalDataChart": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object"
                            }
                          ]
                        },
                        "example": [1640995200, 2500000000]
                      }
                    },
                    "allChains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Ethereum", "BSC", "Polygon"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/dexs/{chain}": {
      "get": {
        "tags": ["volumes"],
        "summary": "List all dexs along with summaries of their volumes and dataType history data filtering by chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain name, list of all supported chains can be found under allChains attribute in /overview/dexs response",
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Overview of DEXs on specified chain with volume data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "protocols": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Uniswap"
                          },
                          "total24h": {
                            "type": "number",
                            "example": 800000000
                          },
                          "change_1d": {
                            "type": "number",
                            "example": 3.2
                          }
                        }
                      }
                    },
                    "totalDataChart": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [1640995200, 1200000000]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/summary/dexs/{protocol}": {
      "get": {
        "tags": ["volumes"],
        "summary": "Get summary of dex volume with historical data",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "uniswap"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DEX protocol volume summary with historical data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Uniswap"
                    },
                    "total24h": {
                      "type": "number",
                      "example": 1500000000
                    },
                    "totalAllTime": {
                      "type": "number",
                      "example": 500000000000
                    },
                    "totalDataChart": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [1640995200, 1500000000]
                      }
                    },
                    "totalDataChartBreakdown": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [
                          1640995200,
                          {
                            "Uniswap V3": 1200000000,
                            "Uniswap V2": 300000000
                          }
                        ]
                      }
                    },
                    "chains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Ethereum", "Polygon"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/options": {
      "get": {
        "tags": ["volumes"],
        "summary": "List all options dexs along with summaries of their volumes and dataType history data",
        "parameters": [
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyNotionalVolume by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyPremiumVolume", "dailyNotionalVolume"],
              "example": "dailyPremiumVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Overview of all options DEXs with volume data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "protocols": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Deribit"
                          },
                          "total24h": {
                            "type": "number",
                            "example": 500000000
                          },
                          "change_1d": {
                            "type": "number",
                            "example": 8.5
                          }
                        }
                      }
                    },
                    "totalDataChart": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [1640995200, 750000000]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/options/{chain}": {
      "get": {
        "tags": ["volumes"],
        "summary": "List all options dexs along with summaries of their volumes and dataType history data filtering by chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain name, list of all supported chains can be found under allChains attribute in /overview/options response",
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyNotionalVolume by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyPremiumVolume", "dailyNotionalVolume"],
              "example": "dailyPremiumVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/summary/options/{protocol}": {
      "get": {
        "tags": ["volumes"],
        "summary": "Get summary of options dex volume with historical data",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "derive"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyNotionalVolume by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyPremiumVolume", "dailyNotionalVolume"],
              "example": "dailyPremiumVolume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/overview/fees": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "List all protocols along with summaries of their fees and revenue and dataType history data",
        "parameters": [
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Overview of all protocols with fees and revenue data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "protocols": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Uniswap"
                          },
                          "total24h": {
                            "type": "number",
                            "example": 5000000
                          },
                          "revenue24h": {
                            "type": "number",
                            "example": 2000000
                          },
                          "change_1d": {
                            "type": "number",
                            "example": 12.5
                          },
                          "chains": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Ethereum", "Polygon"]
                          }
                        }
                      }
                    },
                    "totalDataChart": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [1640995200, 25000000]
                      }
                    },
                    "totalDataChartBreakdown": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "example": [
                          1640995200,
                          {
                            "Uniswap": 5000000,
                            "Compound": 3000000
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/overview/fees/{chain}": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "List all protocols along with summaries of their fees and revenue and dataType history data by chain",
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "required": true,
            "description": "chain name, list of all supported chains can be found under allChains attribute in /overview/fees response",
            "schema": {
              "type": "string",
              "example": "ethereum"
            }
          },
          {
            "name": "excludeTotalDataChart",
            "in": "query",
            "required": false,
            "description": "true to exclude aggregated chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "excludeTotalDataChartBreakdown",
            "in": "query",
            "required": false,
            "description": "true to exclude broken down chart from response",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/summary/fees/{protocol}": {
      "get": {
        "tags": ["fees and revenue"],
        "summary": "Get summary of protocol fees and revenue with historical data",
        "parameters": [
          {
            "name": "protocol",
            "in": "path",
            "required": true,
            "description": "protocol slug",
            "schema": {
              "type": "string",
              "example": "derive"
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "description": "Desired data type, dailyFees by default.",
            "schema": {
              "type": "string",
              "enum": ["dailyFees", "dailyRevenue"],
              "example": "dailyFees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  }
}
